global !p
import ipcalc
def netobj(cidr, rv="ip"):
    net = False
    try:
        net = ipcalc.Network(cidr)
    except:
        pass
    if net:
        if rv == "ip":
            return str(net)
        elif rv == "broadcast":
            return str(net.broadcast())
        elif rv == "netmask":
            return str(net.netmask())
    else:
        return " - "
endglobal

snippet node "Node config for Orchestrator" b
# Node Name
name "`!v expand("%:t:r")`.skybet.net"

#Attributes required for initial server build
#Don't remove them please
# ${2:172.16.1.1/32}
default['ipaddress'] = "`!p snip.rv = netobj(t[2])`"
default['fqdn'] = "`!v expand("%:t:r")`.skybet.net"
default['netbroadcast'] = "`!p snip.rv = netobj(t[2], "broadcast")`"
default['netgateway'] = "${3:Gateway}"
default['netmask'] = "`!p snip.rv = netobj(t[2], "netmask")`"
default['netlabel'] = "${4:LABEL}"

#Attributes required for automatic vcenter builds
default['disksize'] = "${5:12}"
default['memsize'] = "${6:8192}"
default['numcpu'] = "${7:6}"
default['guestos'] = "${8:rhel6_64Guest}"
default['vmfolder'] = "${9}"
default['respool'] = "${10}"
default['cluster'] = "${11}"
# Node Environment
chef_environment "${12:`!v expand('%:p:h:t')`}"

# Node Run Lists (Recipes and roles)
run_list [
  ${13:${VISUAL:# runlist}}
]


endsnippet

snippet config "Create vagrant vm config definition" b
config.vm.define "${1:NODE}" do |node|
    node.vm.box_url = "http://guearepo01.skybet.net:81/files/vbox-rhel6-64.box"
    node.vm.box = "vbox-rhel6-64"
    node.vm.provision :chef_solo do |chef|
      chef.cookbooks_path = ["chef/cookbooks", "chef/opscode-cookbooks"]
      chef.node_name = "testserver"
      chef.roles_path = "chef/roles"
      chef.data_bags_path = "chef/data_bags"
      chef.environments_path = "chef/environments"
      chef.environment = "TEST_7"
      chef.add_recipe("chef-solo-search")
      chef.add_recipe("sbg_base::rhel_repo")

      chef.add_role("sbg-common")
      $0
    end
end
endsnippet
