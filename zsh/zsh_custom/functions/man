manpage=$1

if [[ -z $manpage ]]; then
	# Mac compatibility alert, macs don't do shuf. cos they ain't as cool as they pretend to be.`
	manpage=$( find /usr/share/man/man[0-9] -type f | shuf -n 1 )
fi

if [[ -n $TMUX_PANE ]]; then
	# open up the manpage in a new split
	tmux split-window -hd "man $manpage"

	# record what the pane ID is of that pane for use later
	MAN_PANE=$( tmux list-pane -F '#{pane_id} #{pane_start_command}' | awk -v manpage=$manpage '$NF == manpage { print $1 }' )


	# give page up and page down clearer variable names.
	export pageup=${terminfo[kpp]}
	export pagedown=${terminfo[knp]}
	export manpref="^w"

	# define some functions for interacting with the man page
	def killman(){
		tmux kill-pane -t $MAN_PANE

		# reset the key bindings
		for i in / f n N q ${pageup} ${pagedown}; do
			bindkey -r "${manpref}$i"
		done

 		# clean up the function space
 		for i in manpgdown manpgup manfind manfnext manfNext; do
 			unset -f $i
 			zle -D $i
 		done
 	}

# 	# set a trap so when the spawning pane exits, so does the man page.
# 	TRAPEXIT() {
# 		killman
# 	}

	def manpgdown() { tmux send-keys -t $MAN_PANE $"${pagedown}" }
	def manpgup() { tmux send-keys -t $MAN_PANE "${pageup}" }
	def manfind() { tmux command-prompt -p "Search man page: " "send-keys -t $MAN_PANE /%1 c-m" }
	def manfnext() { tmux send-keys -t $MAN_PANE "n" }
	def manfNext() { tmux send-keys -t $MAN_PANE "N" }

	# bind functions to zle widgets
	zle -N killman killman
	zle -N manpgdown manpgdown
	zle -N manpgup manpgup
	zle -N manfind manfind
	zle -N manfnext manfnext
	zle -N manfNext manfNext

	# Set key timeout for when the prefix has been entered waiting for next key press
	export KEYTIMEOUT=500
	# bind zle widgets to keys
	# try to keep the same keys as would be used in man.
	bindkey "${manpref}q" killman
	bindkey "${manpref}${pageup}" manpgup
	bindkey "${manpref}${pagedown}" manpgdown
	bindkey "${manpref}/" manfind
	bindkey "${manpref}n" manfnext
	bindkey "${manpref}N" manfNext
else
	man $manpage
fi
